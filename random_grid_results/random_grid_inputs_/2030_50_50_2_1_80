Running for Test Case File ../random_grid_inputs/2030_50_50_2_1_80

==> Test Case : 2030 
==> Grid Size : 50 X 50 
==> NR: 2 , NT: 1
 Visiting ( f = 0 , g = 0 , h = 0 ) state=[1, 4][21, 20]F
 Visiting ( f = 199999999999999999 , g = 1 , h = 199999999999999998 ) state=[1, 4][21, 21]F
 Visiting ( f = 199999999999999999 , g = 1 , h = 199999999999999998 ) state=[1, 4][22, 20]F
 Visiting ( f = 200000000000000000 , g = 2 , h = 199999999999999998 ) state=[1, 4][22, 19]F
 Visiting ( f = 200000000000000001 , g = 3 , h = 199999999999999998 ) state=[1, 4][22, 18]F
 Visiting ( f = 200000000000000002 , g = 4 , h = 199999999999999998 ) state=[1, 4][21, 18]F
 Visiting ( f = 200000000000000003 , g = 5 , h = 199999999999999998 ) state=[1, 4][21, 17]F
==> Failed in Finding a Solution, exhausted all possibilities in heap

targets => ['[28, 31]']
solution:
[1, 4][21, 20]F

Allocation Change Report
[1, 4][21, 20]F None
