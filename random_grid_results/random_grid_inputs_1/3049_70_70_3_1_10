Running for Test Case File ../random_grid_inputs/3049_70_70_3_1_10

==> Test Case : 3049 
==> Grid Size : 70 X 70 
==> NR: 3 , NT: 1
 Visiting ( f = 0 , g = 0 , h = 0 ) state=[29, 66][30, 35][65, 33]F
 Visiting ( f = 73 , g = 1 , h = 72 ) state=[29, 65][29, 35][66, 33]F
 Visiting ( f = 72 , g = 2 , h = 70 ) state=[28, 65][28, 35][66, 32]F
 Visiting ( f = 71 , g = 3 , h = 68 ) state=[27, 65][27, 35][66, 31]F
 Visiting ( f = 70 , g = 4 , h = 66 ) state=[26, 65][27, 34][66, 30]F
 Visiting ( f = 69 , g = 5 , h = 64 ) state=[25, 65][26, 34][66, 29]F
 Visiting ( f = 68 , g = 6 , h = 62 ) state=[24, 65][25, 34][66, 28]F
 Visiting ( f = 67 , g = 7 , h = 60 ) state=[23, 65][24, 34][66, 27]F
 Visiting ( f = 66 , g = 8 , h = 58 ) state=[22, 65][23, 34][66, 26]F
 Visiting ( f = 65 , g = 9 , h = 56 ) state=[21, 65][22, 34][66, 25]F
 Visiting ( f = 64 , g = 10 , h = 54 ) state=[20, 65][22, 33][66, 24]F
 Visiting ( f = 63 , g = 11 , h = 52 ) state=[19, 65][21, 33][66, 23]F
 Visiting ( f = 62 , g = 12 , h = 50 ) state=[18, 65][21, 32][66, 22]F
 Visiting ( f = 61 , g = 13 , h = 48 ) state=[17, 65][21, 31][67, 22]F
 Visiting ( f = 60 , g = 14 , h = 46 ) state=[16, 65][21, 30][67, 21]F
 Visiting ( f = 59 , g = 15 , h = 44 ) state=[15, 65][20, 30][67, 20]F
 Visiting ( f = 58 , g = 16 , h = 42 ) state=[14, 65][19, 30][67, 19]F
 Visiting ( f = 57 , g = 17 , h = 40 ) state=[13, 65][18, 30][67, 18]F
 Visiting ( f = 56 , g = 18 , h = 38 ) state=[12, 65][18, 29][67, 17]F
 Visiting ( f = 55 , g = 19 , h = 36 ) state=[11, 65][17, 29][67, 16]F
 Visiting ( f = 54 , g = 20 , h = 34 ) state=[10, 65][16, 29][67, 15]F
 Visiting ( f = 53 , g = 21 , h = 32 ) state=[9, 65][15, 29][67, 14]F
 Visiting ( f = 52 , g = 22 , h = 30 ) state=[8, 65][14, 29][67, 13]F
 Visiting ( f = 51 , g = 23 , h = 28 ) state=[8, 64][13, 29][67, 12]F
 Visiting ( f = 50 , g = 24 , h = 26 ) state=[7, 64][12, 29][66, 12]F
 Visiting ( f = 49 , g = 25 , h = 24 ) state=[6, 64][11, 29][66, 11]F
 Visiting ( f = 48 , g = 26 , h = 22 ) state=[6, 63][10, 29][66, 10]F
 Visiting ( f = 47 , g = 27 , h = 20 ) state=[5, 63][9, 29][66, 9]F
 Visiting ( f = 46 , g = 28 , h = 18 ) state=[4, 63][8, 29][66, 8]F
 Visiting ( f = 45 , g = 29 , h = 16 ) state=[3, 63][7, 29][67, 8]F
 Visiting ( f = 44 , g = 30 , h = 14 ) state=[2, 63][6, 29][67, 7]F
 Visiting ( f = 43 , g = 31 , h = 12 ) state=[1, 63][5, 29][67, 6]F
 Visiting ( f = 42 , g = 32 , h = 10 ) state=[0, 63][4, 29][67, 5]F
 Visiting ( f = 41 , g = 33 , h = 8 ) state=[0, 62][3, 29][67, 4]F
 Visiting ( f = 40 , g = 34 , h = 6 ) state=[0, 61][2, 29][67, 3]F
 Visiting ( f = 39 , g = 35 , h = 4 ) state=[0, 61][1, 29][67, 2]F
 Visiting ( f = 38 , g = 36 , h = 2 ) state=[0, 61][0, 29][67, 1]F
==> solution cost =  37  , states expanded =  37 , time spent =  0.24  secs , memory taken =  11 MB

targets => ['[68, 1]']
solution:
[29, 66][30, 35][65, 33]F
[29, 65][29, 35][66, 33]F
[28, 65][28, 35][66, 32]F
[27, 65][27, 35][66, 31]F
[26, 65][27, 34][66, 30]F
[25, 65][26, 34][66, 29]F
[24, 65][25, 34][66, 28]F
[23, 65][24, 34][66, 27]F
[22, 65][23, 34][66, 26]F
[21, 65][22, 34][66, 25]F
[20, 65][22, 33][66, 24]F
[19, 65][21, 33][66, 23]F
[18, 65][21, 32][66, 22]F
[17, 65][21, 31][67, 22]F
[16, 65][21, 30][67, 21]F
[15, 65][20, 30][67, 20]F
[14, 65][19, 30][67, 19]F
[13, 65][18, 30][67, 18]F
[12, 65][18, 29][67, 17]F
[11, 65][17, 29][67, 16]F
[10, 65][16, 29][67, 15]F
[9, 65][15, 29][67, 14]F
[8, 65][14, 29][67, 13]F
[8, 64][13, 29][67, 12]F
[7, 64][12, 29][66, 12]F
[6, 64][11, 29][66, 11]F
[6, 63][10, 29][66, 10]F
[5, 63][9, 29][66, 9]F
[4, 63][8, 29][66, 8]F
[3, 63][7, 29][67, 8]F
[2, 63][6, 29][67, 7]F
[1, 63][5, 29][67, 6]F
[0, 63][4, 29][67, 5]F
[0, 62][3, 29][67, 4]F
[0, 61][2, 29][67, 3]F
[0, 61][1, 29][67, 2]F
[0, 61][0, 29][67, 1]F
[0, 61][0, 28][68, 1]T

Allocation Change Report
[29, 66][30, 35][65, 33]F None
[29, 65][29, 35][66, 33]F [[], [], [[68, 1]]]
[28, 65][28, 35][66, 32]F
[27, 65][27, 35][66, 31]F
[26, 65][27, 34][66, 30]F
[25, 65][26, 34][66, 29]F
[24, 65][25, 34][66, 28]F
[23, 65][24, 34][66, 27]F
[22, 65][23, 34][66, 26]F
[21, 65][22, 34][66, 25]F
[20, 65][22, 33][66, 24]F
[19, 65][21, 33][66, 23]F
[18, 65][21, 32][66, 22]F
[17, 65][21, 31][67, 22]F
[16, 65][21, 30][67, 21]F
[15, 65][20, 30][67, 20]F
[14, 65][19, 30][67, 19]F
[13, 65][18, 30][67, 18]F
[12, 65][18, 29][67, 17]F
[11, 65][17, 29][67, 16]F
[10, 65][16, 29][67, 15]F
[9, 65][15, 29][67, 14]F
[8, 65][14, 29][67, 13]F
[8, 64][13, 29][67, 12]F
[7, 64][12, 29][66, 12]F
[6, 64][11, 29][66, 11]F
[6, 63][10, 29][66, 10]F
[5, 63][9, 29][66, 9]F
[4, 63][8, 29][66, 8]F
[3, 63][7, 29][67, 8]F
[2, 63][6, 29][67, 7]F
[1, 63][5, 29][67, 6]F
[0, 63][4, 29][67, 5]F
[0, 62][3, 29][67, 4]F
[0, 61][2, 29][67, 3]F
[0, 61][1, 29][67, 2]F
[0, 61][0, 29][67, 1]F
[0, 61][0, 28][68, 1]T
